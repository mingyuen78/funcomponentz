{"version":3,"sources":["components/widgets/CustomAppBar.js","components/utils/CAPIHelper.js","components/utils/LoopRender.js","components/pages/HomePage.js","components/pages/FormPage.js","components/utils/RandomColorHelper.js","components/pages/ChartPage.js","App.js","serviceWorker.js","index.js"],"names":["CustomAppBar","props","React","useState","anchorEl","setAnchorEl","open","setOpen","title","loading","setLoading","error","message","setMessage","menuList","label","url","handleClose","evt","handleMenuClick","toggleDrawer","event","type","key","useEffect","Box","id","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","variant","style","flex","aria-haspopup","currentTarget","keepMounted","Boolean","onClose","MenuItem","SwipeableDrawer","onOpen","role","width","onKeyDown","List","map","item","index","ListItem","button","component","Link","to","ListItemText","primary","path","LinearProgress","Snackbar","anchorOrigin","vertical","horizontal","handleSnackBarClose","autoHideDuration","instance","CAPIHelper","this","_type","value","console","log","returnValue","LoopRender","data","setData","Name","HomePage","setItem","loaded","setLoaded","snackbar","setSnackbar","refresh","setRefresh","apiHelper","a","async","axios","get","constructor","googleSheetURL","timeout","then","response","Result","catch","finally","getAttribute","p","FormPage","generateToday","moment","Date","format","initialFormState","dob","name","email","country","formObject","setFormObject","simpleValidator","useRef","SimpleReactValidator","element","validationCallBack","resultReturn","current","handleFormChange","persist","target","handleBlur","showMessageFor","toString","noValidate","autoComplete","className","onSubmit","preventDefault","allValid","payLoad","nric","showMessages","TextField","helperText","inputProps","maxLength","onChange","onBlur","placeholder","InputLabelProps","shrink","fullWidth","select","SelectProps","native","option","Code","mt","Button","randomColorHelper","colors","i","push","randomColor","ChartPage","allCountries","allPopulations","Population","labels","datasets","backgroundColor","processItem","options","tooltips","callbacks","tooltipItem","datasetIndex","toLocaleString","pan","enabled","mode","zoom","scales","yAxes","ticks","callback","values","App","state","Fragment","CssBaseline","exact","Component","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fab66fc0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n// Props is flowed in like parameters.\r\nfunction CustomAppBar(props) {\r\n  // We use React useState Hook to simulate constructor state.\r\n  // every useState can optionally assign default value and have a reflector method set in second param\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title] = React.useState(props.title);\r\n  const [loading, setLoading] = React.useState(props.loading);\r\n  const [message, setMessage] = React.useState(props.error);\r\n\r\n  const menuList = [\r\n    { label: \"Home\", url: \"/\" },\r\n    { label: \"Form\", url: \"/form\" },\r\n    { label: \"Chart\", url: \"/chart\" }\r\n  ];\r\n  const handleShowMore = evt => {\r\n    setAnchorEl(evt.currentTarget);\r\n  };\r\n  const handleClose = evt => {\r\n    setAnchorEl(null);\r\n    // Pass event to parent;\r\n    if (props.handleMenuClick != null) {\r\n      props.handleMenuClick(evt);\r\n    }\r\n  };\r\n  const toggleDrawer = open => event => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setOpen(open);\r\n  };\r\n\r\n  const generateDrawerList = () => {\r\n    return (\r\n      <div\r\n        role=\"presentation\"\r\n        style={{ width: 200 }}\r\n        onClick={toggleDrawer(false)}\r\n        onKeyDown={toggleDrawer(false)}\r\n      >\r\n        <List>\r\n          {menuList.map((item, index) => (\r\n            <ListItem button key={item.label} component={Link} to={item.url}>\r\n              <ListItemText primary={item.label} path={item.url} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n  };\r\n  const handleSnackBarClose = event => {\r\n    setMessage(false);\r\n    if (props.handleSnackBarClose != null) {\r\n      props.handleSnackBarClose(event);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setLoading(props.loading);\r\n  }, [props.loading]);\r\n\r\n  React.useEffect(() => {\r\n    setMessage(props.error);\r\n  }, [props.error]);\r\n  return (\r\n    <Box id=\"appBarContainer\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={toggleDrawer(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" style={{ flex: 1 }}>\r\n            {title}\r\n          </Typography>\r\n          <IconButton\r\n            aria-label=\"show more\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            onClick={handleShowMore}\r\n          >\r\n            <MoreIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n        <Menu\r\n          id=\"popup-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n          <MenuItem onClick={handleClose} id=\"0\">\r\n            Refresh\r\n          </MenuItem>\r\n          <MenuItem onClick={handleClose} id=\"1\">\r\n            About\r\n          </MenuItem>\r\n        </Menu>\r\n\r\n        <SwipeableDrawer\r\n          open={open}\r\n          onClose={toggleDrawer(false)}\r\n          onOpen={toggleDrawer(true)}\r\n        >\r\n          {generateDrawerList()}\r\n        </SwipeableDrawer>\r\n        {loading && <LinearProgress />}\r\n      </AppBar>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\"\r\n        }}\r\n        key={`${\"bottom\"},${\"center\"}`}\r\n        open={Boolean(message)}\r\n        onClose={handleSnackBarClose}\r\n        autoHideDuration={2000}\r\n        message={<span id=\"message-id\">{message}</span>}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\nexport default CustomAppBar;\r\n","let instance = null;\r\n\r\nclass CAPIHelper {\r\n  // Using Singleton\r\n  constructor() {\r\n    if (!instance) {\r\n      // Make sure is only one instance.\r\n      instance = this;\r\n    }\r\n\r\n    this._type = \"default\";\r\n    return instance;\r\n  }\r\n\r\n  debugValue(value) {\r\n    console.log(\"CAPIHelper\", value);\r\n  }\r\n\r\n  static googleSheetURL() {\r\n    let returnValue = \"\";\r\n    switch (instance._type) {\r\n      case \"default\":\r\n        returnValue =\r\n          \"https://script.google.com/macros/s/AKfycbyWx63L82e2DqT50ILpYL6rpGXakBaRteP-gzqdg-tnI1-xTEs/exec\";\r\n        break;\r\n\r\n      case \"phonecode\":\r\n        returnValue =\r\n          \"https://script.google.com/macros/s/AKfycbz6dsPaXOboi_ops9RaGAT1msjak4QTob1Blv8XR5ySxSrEmgVm/exec\";\r\n        break;\r\n\r\n      case \"population\":\r\n        returnValue =\r\n          \"https://script.google.com/macros/s/AKfycbyBWKD30pBQKSUpXYTJM37LQ1TAz36gMSBQIhWVwCzEp-TcdOCS/exec\";\r\n        break;\r\n\r\n      default:\r\n        returnValue =\r\n          \"https://script.google.com/macros/s/AKfycbyWx63L82e2DqT50ILpYL6rpGXakBaRteP-gzqdg-tnI1-xTEs/exec\";\r\n        break;\r\n    }\r\n\r\n    return returnValue;\r\n  }\r\n\r\n  get type() {\r\n    return this._type;\r\n  }\r\n\r\n  set type(value) {\r\n    this._type = value;\r\n  }\r\n}\r\n\r\nexport default CAPIHelper;\r\n","import React from \"react\";\r\n\r\nfunction LoopRender(props) {\r\n  //Props must have items in array.\r\n  const [data, setData] = React.useState(props.data);\r\n  React.useEffect(() => {\r\n    setData(props.data);\r\n    return () => {\r\n      setData([]);\r\n    };\r\n  }, [props.data]);\r\n  return (\r\n    <ul>\r\n      {data.map((item, index) => (\r\n        <li key={index}>{item.Name}</li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default LoopRender;\r\n","import React from \"react\";\r\nimport CustomAppBar from \"../widgets/CustomAppBar\";\r\nimport CAPIHelper from \"../utils/CAPIHelper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LoopRender from \"../utils/LoopRender\";\r\nimport axios from \"axios\";\r\n\r\nfunction HomePage() {\r\n  // In Function component u have the freedom to execute functions and hooks within your main functions.\r\n  const [title] = React.useState(\r\n    \"Advance Use of UseEffect and UseState in Function Components\"\r\n  );\r\n  const [item, setItem] = React.useState([]);\r\n  const [loaded, setLoaded] = React.useState(false);\r\n  const [snackbar, setSnackbar] = React.useState(false);\r\n  const [refresh, setRefresh] = React.useState(true);\r\n\r\n  // The boilerplate code for useEffect is...\r\n  // useEffect(() => {\r\n  //   codes you want to run. Normally is for fetching and updating props value into state.\r\n  //   return () => {\r\n  //     cleanup code after component is disposed e.g. deleteChatConnection to free up memory etc.\r\n  //   };\r\n  // }, [stateYouWantToWatch])\r\n\r\n  React.useEffect(() => {\r\n    if (refresh) {\r\n      // You can reduce timeout to see error in effect.\r\n      const timeOutInMiliseconds = 2500;\r\n      const apiHelper = new CAPIHelper();\r\n      apiHelper.type = \"default\";\r\n      setLoaded(true);\r\n      setItem([]);\r\n\r\n      const fetchData = async () => {\r\n        await axios\r\n          .get(apiHelper.constructor.googleSheetURL(), {\r\n            timeout: timeOutInMiliseconds\r\n          })\r\n          .then(function(response) {\r\n            setItem(response.data.Result);\r\n            setLoaded(false);\r\n          })\r\n          .catch(function(error) {\r\n            setSnackbar(\r\n              \"Error in communicating to server. Refresh and try again\"\r\n            );\r\n            setLoaded(false);\r\n          })\r\n          .finally(function() {\r\n            console.log(\"axios task complete!\");\r\n            setRefresh(false);\r\n          });\r\n      };\r\n      fetchData();\r\n    }\r\n    // by adding [] empty array useEffect becomes a componentDidMount behaviour\r\n    // which executes once.\r\n    // If you want a state to be trigger a refresh again, pass in state name inside [] instead.\r\n    // in this case, I use refresh as a command.\r\n  }, [refresh]);\r\n\r\n  const handleMenuClick = event => {\r\n    // Watch this handleMenuClick how it is assigned from props.\r\n    // It catches a event bubbled from the child CloseMenu event.\r\n\r\n    switch (event.currentTarget.getAttribute(\"id\")) {\r\n      case \"0\":\r\n        // By toggling refresh state will trigger the useEffect again,\r\n        // because we use [refresh] and it is watching that particular state.\r\n        setRefresh(true);\r\n        break;\r\n      case \"1\":\r\n        setSnackbar(title);\r\n        break;\r\n      default:\r\n        setSnackbar(title);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <CustomAppBar\r\n        title={title}\r\n        loading={loaded}\r\n        error={snackbar}\r\n        handleMenuClick={handleMenuClick}\r\n      />\r\n      <Box p={2}>\r\n        <LoopRender data={item}></LoopRender>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport CustomAppBar from \"../widgets/CustomAppBar\";\r\nimport CAPIHelper from \"../utils/CAPIHelper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./../../App.css\";\r\n\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nfunction FormPage() {\r\n  // In Function component u have the freedom to execute functions and hooks within your main functions.\r\n  const [title] = React.useState(\"Function Component with Form\");\r\n  const [item, setItem] = React.useState([]);\r\n  const [loaded, setLoaded] = React.useState(false);\r\n  const [snackbar, setSnackbar] = React.useState(false);\r\n  const [refresh, setRefresh] = React.useState(true);\r\n  const generateToday = () => {\r\n    return moment(new Date()).format(\"YYYY-MM-DD\");\r\n  };\r\n  const initialFormState = {\r\n    dob: generateToday(),\r\n    name: \"\",\r\n    email: \"\",\r\n    country: \"Malaysia\"\r\n  };\r\n  const [formObject, setFormObject] = React.useState(initialFormState);\r\n  // Because simpleValidator cannot be Reference multiple time.\r\n  // It has to be used as a singleton or in constructor, remember singleton?\r\n  // In our case we use React.useRef to stop it from re-reference again when the\r\n  // whole function is refreshed.\r\n  const simpleValidator = React.useRef(\r\n    new SimpleReactValidator({ element: message => <label>{message}</label> })\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (refresh) {\r\n      // You can reduce timeout to see error in effect.\r\n      const timeOutInMiliseconds = 2500;\r\n      const apiHelper = new CAPIHelper();\r\n      apiHelper.type = \"phonecode\";\r\n      setFormObject({\r\n        dob: generateToday(),\r\n        name: \"\",\r\n        email: \"\",\r\n        country: \"Malaysia\"\r\n      });\r\n      setLoaded(true);\r\n      setItem([]);\r\n\r\n      const fetchData = async () => {\r\n        await axios\r\n          .get(apiHelper.constructor.googleSheetURL(), {\r\n            timeout: timeOutInMiliseconds\r\n          })\r\n          .then(function(response) {\r\n            setItem(response.data.Result);\r\n            setLoaded(false);\r\n          })\r\n          .catch(function(error) {\r\n            setSnackbar(\r\n              \"Error in communicating to server. Refresh and try again\"\r\n            );\r\n            setLoaded(false);\r\n          })\r\n          .finally(function() {\r\n            setRefresh(false);\r\n          });\r\n      };\r\n      fetchData();\r\n    }\r\n  }, [refresh]);\r\n\r\n  const handleMenuClick = event => {\r\n    switch (event.currentTarget.getAttribute(\"id\")) {\r\n      case \"0\":\r\n        setRefresh(true);\r\n        break;\r\n      case \"1\":\r\n        setSnackbar(title);\r\n        break;\r\n      default:\r\n        setSnackbar(title);\r\n        break;\r\n    }\r\n  };\r\n  const validationCallBack = type => {\r\n    let resultReturn = false;\r\n    switch (type) {\r\n      case \"Email\":\r\n        resultReturn = simpleValidator.current.message(\r\n          \"email\",\r\n          formObject.email,\r\n          \"required|email\"\r\n        );\r\n        break;\r\n      case \"Name\":\r\n        resultReturn = simpleValidator.current.message(\r\n          \"Full Name\",\r\n          formObject.name,\r\n          \"required|string|min:2\"\r\n        );\r\n        break;\r\n      case \"Dob\":\r\n        resultReturn = simpleValidator.current.message(\r\n          \"Birthdate\",\r\n          formObject.dob,\r\n          \"required\"\r\n        );\r\n        break;\r\n      case \"Contry\":\r\n        resultReturn = simpleValidator.current.message(\r\n          \"Country\",\r\n          formObject.country,\r\n          \"required\"\r\n        );\r\n        break;\r\n      default:\r\n        resultReturn = false;\r\n        break;\r\n    }\r\n    return resultReturn;\r\n  };\r\n  const handleSnackBarClose = event => {\r\n    setSnackbar(false);\r\n  };\r\n  const handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (simpleValidator.current.allValid()) {\r\n      setSnackbar(\"Congratulation, registration details is submitted!\");\r\n      let payLoad = {\r\n        email: formObject.email,\r\n        nric: formObject.nric,\r\n        name: formObject.name,\r\n        dob: formObject.dob,\r\n        country: formObject.country\r\n      };\r\n      console.log(payLoad);\r\n    } else {\r\n      setSnackbar(\"Error, some fields are invalid or required\");\r\n      simpleValidator.current.showMessages();\r\n    }\r\n  };\r\n  const handleFormChange = async event => {\r\n    event.persist();\r\n    await setFormObject({\r\n      ...formObject,\r\n      [event.target.id]: event.target.value\r\n    });\r\n  };\r\n  const handleBlur = event => {\r\n    simpleValidator.current.showMessageFor(event.target.id.toString());\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <CustomAppBar\r\n        title={title}\r\n        loading={loaded}\r\n        error={snackbar}\r\n        handleSnackBarClose={handleSnackBarClose}\r\n        handleMenuClick={handleMenuClick}\r\n      />\r\n      <Box p={2.5}>\r\n        <h3>React Registration Form with React Simple Validation</h3>\r\n        <p>\r\n          Welcome to React registration form , in this form we will practise how\r\n          validation is done, together with some Material UI components.\r\n        </p>\r\n        <form\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          className=\"customForm\"\r\n          onSubmit={handleFormSubmit}\r\n        >\r\n          {/* Remember use onBlur to trigger because, in Function Component, there is no this.forceUpdate method which only works in class Component */}\r\n          <TextField\r\n            id=\"name\"\r\n            label=\"Full Name\"\r\n            error={Boolean(validationCallBack(\"Name\"))}\r\n            helperText={validationCallBack(\"Name\")}\r\n            inputProps={{\r\n              maxLength: 150,\r\n              autoComplete: \"new-password\"\r\n            }}\r\n            onChange={handleFormChange}\r\n            onBlur={handleBlur}\r\n            value={formObject.name}\r\n            placeholder=\"Your Full Name...\"\r\n            className=\"customInput\"\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            error={Boolean(validationCallBack(\"Email\"))}\r\n            helperText={validationCallBack(\"Email\")}\r\n            inputProps={{\r\n              maxLength: 150,\r\n              autoComplete: \"new-password\"\r\n            }}\r\n            onChange={handleFormChange}\r\n            onBlur={handleBlur}\r\n            value={formObject.email}\r\n            placeholder=\"Your Email...\"\r\n            className=\"customInput\"\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            id=\"dob\"\r\n            label=\"Birthday\"\r\n            type=\"date\"\r\n            className=\"customInput\"\r\n            onChange={handleFormChange}\r\n            onBlur={handleBlur}\r\n            value={formObject.dob}\r\n            error={Boolean(validationCallBack(\"Dob\"))}\r\n            helperText={validationCallBack(\"Dob\")}\r\n            fullWidth\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n          />\r\n          <TextField\r\n            id=\"country\"\r\n            select\r\n            label=\"Nationality\"\r\n            className=\"customInput\"\r\n            value={formObject.country}\r\n            onChange={handleFormChange}\r\n            error={Boolean(validationCallBack(\"Country\"))}\r\n            helperText={validationCallBack(\"Country\")}\r\n            fullWidth\r\n            SelectProps={{\r\n              native: true\r\n            }}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n          >\r\n            {item.map(option => (\r\n              <option key={option.Code} value={option.Name}>\r\n                {option.Name}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n          <Box mt={2}>\r\n            <Button variant=\"contained\" type=\"submit\" color=\"primary\">\r\n              Submit\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default FormPage;\r\n","import randomColor from \"randomcolor\";\r\nconst dynamicColors = i => {\r\n  return randomColor();\r\n};\r\n\r\nconst randomColorHelper = data => {\r\n  const colors = [];\r\n  for (let i in data) {\r\n    colors.push(dynamicColors(i));\r\n  }\r\n  return colors;\r\n};\r\n\r\nexport { randomColorHelper };\r\n","import React from \"react\";\r\nimport CustomAppBar from \"../widgets/CustomAppBar\";\r\nimport CAPIHelper from \"../utils/CAPIHelper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Chart } from \"primereact/chart\";\r\n// chart is based on the popular chart.js you need to npm that as well.\r\nimport \"primereact/resources/themes/nova-light/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport axios from \"axios\";\r\nimport { randomColorHelper } from \"../utils/RandomColorHelper\";\r\n\r\nfunction ChartPage() {\r\n  // In Function component u have the freedom to execute functions and hooks within your main functions.\r\n  const [title] = React.useState(\"Function Component with Chart\");\r\n  const [item, setItem] = React.useState([]);\r\n  const [loaded, setLoaded] = React.useState(false);\r\n  const [snackbar, setSnackbar] = React.useState(false);\r\n  const [refresh, setRefresh] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (refresh) {\r\n      // You can reduce timeout to see error in effect.\r\n      const timeOutInMiliseconds = 2000;\r\n      const apiHelper = new CAPIHelper();\r\n      apiHelper.type = \"population\";\r\n      setLoaded(true);\r\n      setItem([]);\r\n\r\n      const fetchData = async () => {\r\n        await axios\r\n          .get(apiHelper.constructor.googleSheetURL(), {\r\n            timeout: timeOutInMiliseconds\r\n          })\r\n          .then(function(response) {\r\n            setItem(response.data.Result);\r\n            setLoaded(false);\r\n          })\r\n          .catch(function(error) {\r\n            setSnackbar(\r\n              \"Error in communicating to server. Refresh and try again\"\r\n            );\r\n            setLoaded(false);\r\n          })\r\n          .finally(function() {\r\n            setRefresh(false);\r\n          });\r\n      };\r\n      fetchData();\r\n    }\r\n  }, [refresh]);\r\n\r\n  const handleMenuClick = event => {\r\n    // Watch this handleMenuClick how it is assigned from props.\r\n    // It catches a event bubbled from the child CloseMenu event.\r\n\r\n    switch (event.currentTarget.getAttribute(\"id\")) {\r\n      case \"0\":\r\n        setRefresh(true);\r\n        break;\r\n      case \"1\":\r\n        setSnackbar(title);\r\n        break;\r\n      default:\r\n        setSnackbar(title);\r\n        break;\r\n    }\r\n  };\r\n  const processItem = data => {\r\n    const allCountries = data.map(item => {\r\n      return item.Name;\r\n    });\r\n    const allPopulations = data.map(item => {\r\n      return item.Population;\r\n    });\r\n    const allColors = randomColorHelper(allPopulations);\r\n    const graphData = {\r\n      labels: allCountries,\r\n      position: \"left\",\r\n      datasets: [\r\n        {\r\n          label: \"Country Population 2018\",\r\n          backgroundColor: allColors,\r\n          data: allPopulations\r\n        }\r\n      ]\r\n    };\r\n\r\n    return graphData;\r\n  };\r\n  const graphOptions = {\r\n    tooltips: {\r\n      callbacks: {\r\n        label: (tooltipItem, data) => {\r\n          // data for manipulation\r\n          return data.datasets[tooltipItem.datasetIndex].data[\r\n            tooltipItem.index\r\n          ].toLocaleString();\r\n        }\r\n      }\r\n    },\r\n    pan: {\r\n      enabled: true,\r\n      mode: \"x\"\r\n    },\r\n    zoom: {\r\n      enabled: true,\r\n      mode: \"x\"\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            // Include a dollar sign in the ticks\r\n            callback: function(value, index, values) {\r\n              return value.toLocaleString();\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n  return (\r\n    <Box>\r\n      <CustomAppBar\r\n        title={title}\r\n        loading={loaded}\r\n        error={snackbar}\r\n        handleMenuClick={handleMenuClick}\r\n      />\r\n      {/* if there's item there's show! */}\r\n      {item && (\r\n        <Box p={2}>\r\n          <Chart type=\"bar\" data={processItem(item)} options={graphOptions} />\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ChartPage;\r\n","import React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport HomePage from \"./components/pages/HomePage\";\nimport FormPage from \"./components/pages/FormPage\";\nimport ChartPage from \"./components/pages/ChartPage\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/home\" component={HomePage} />\n            <Route exact path=\"/form\" component={FormPage} />\n            <Route exact path=\"/chart\" component={ChartPage} />\n          </Switch>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}